import { ApplicationRef, OnDestroy } from '@angular/core';
import { SafeHtml } from '@angular/platform-browser';
import { Subscription } from 'rxjs';
import { GlobalConfig, ToastPackage } from './toast.config';
import * as ɵngcc0 from '@angular/core';
export declare class ToastComponent implements OnDestroy {
    toastPackage: ToastPackage;
    protected appRef: ApplicationRef;
    message: string | SafeHtml;
    title: string;
    options: GlobalConfig;
    /** width of progress bar */
    width: number;
    state: string;
    /** a combination of toast type and options.toastClass */
    toastClasses: string;
    /** controls animation */
    readonly animationParams: {
        value: string;
        params: {
            opacity: number | undefined;
        };
    };
    opacity: number | undefined;
    timeout: any;
    intervalId: any;
    hideTime: number;
    sub: Subscription;
    sub1: Subscription;
    protected toastService: any;
    constructor(toastPackage: ToastPackage, appRef: ApplicationRef);
    ngOnDestroy(): void;
    /**
     * activates toast and sets timeout
     */
    activateToast(): void;
    /**
     * updates progress bar width
     */
    updateProgress(): void;
    /**
     * tells toastrService to remove this toast after animation time
     */
    remove(): void;
    onActionClick(): void;
    tapToast(): void;
    stickAround(): void;
    delayedHideToast(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastComponent, "mdb-toast-component", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcGxpY2F0aW9uUmVmLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEdsb2JhbENvbmZpZywgVG9hc3RQYWNrYWdlIH0gZnJvbSAnLi90b2FzdC5jb25maWcnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9hc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHRvYXN0UGFja2FnZTogVG9hc3RQYWNrYWdlO1xuICAgIHByb3RlY3RlZCBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmO1xuICAgIG1lc3NhZ2U6IHN0cmluZyB8IFNhZmVIdG1sO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgb3B0aW9uczogR2xvYmFsQ29uZmlnO1xuICAgIC8qKiB3aWR0aCBvZiBwcm9ncmVzcyBiYXIgKi9cbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIHN0YXRlOiBzdHJpbmc7XG4gICAgLyoqIGEgY29tYmluYXRpb24gb2YgdG9hc3QgdHlwZSBhbmQgb3B0aW9ucy50b2FzdENsYXNzICovXG4gICAgdG9hc3RDbGFzc2VzOiBzdHJpbmc7XG4gICAgLyoqIGNvbnRyb2xzIGFuaW1hdGlvbiAqL1xuICAgIHJlYWRvbmx5IGFuaW1hdGlvblBhcmFtczoge1xuICAgICAgICB2YWx1ZTogc3RyaW5nO1xuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIG9wYWNpdHk6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIG9wYWNpdHk6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgICB0aW1lb3V0OiBhbnk7XG4gICAgaW50ZXJ2YWxJZDogYW55O1xuICAgIGhpZGVUaW1lOiBudW1iZXI7XG4gICAgc3ViOiBTdWJzY3JpcHRpb247XG4gICAgc3ViMTogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCB0b2FzdFNlcnZpY2U6IGFueTtcbiAgICBjb25zdHJ1Y3Rvcih0b2FzdFBhY2thZ2U6IFRvYXN0UGFja2FnZSwgYXBwUmVmOiBBcHBsaWNhdGlvblJlZik7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBhY3RpdmF0ZXMgdG9hc3QgYW5kIHNldHMgdGltZW91dFxuICAgICAqL1xuICAgIGFjdGl2YXRlVG9hc3QoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiB1cGRhdGVzIHByb2dyZXNzIGJhciB3aWR0aFxuICAgICAqL1xuICAgIHVwZGF0ZVByb2dyZXNzKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogdGVsbHMgdG9hc3RyU2VydmljZSB0byByZW1vdmUgdGhpcyB0b2FzdCBhZnRlciBhbmltYXRpb24gdGltZVxuICAgICAqL1xuICAgIHJlbW92ZSgpOiB2b2lkO1xuICAgIG9uQWN0aW9uQ2xpY2soKTogdm9pZDtcbiAgICB0YXBUb2FzdCgpOiB2b2lkO1xuICAgIHN0aWNrQXJvdW5kKCk6IHZvaWQ7XG4gICAgZGVsYXllZEhpZGVUb2FzdCgpOiB2b2lkO1xufVxuIl19