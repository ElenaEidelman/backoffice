import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { SlideComponent } from './slide.component';
import { CarouselConfig } from './carousel.config';
import * as ɵngcc0 from '@angular/core';
export declare enum Direction {
    UNKNOWN = 0,
    NEXT = 1,
    PREV = 2
}
/**
 * Base element to create carousel
 */
export declare class CarouselComponent implements OnDestroy, AfterViewInit {
    protected el: ElementRef;
    private cdRef;
    private renderer;
    SWIPE_ACTION: {
        LEFT: string;
        RIGHT: string;
    };
    _slidesList: QueryList<SlideComponent>;
    readonly slides: SlideComponent[];
    private _destroy$;
    protected currentInterval: any;
    protected isPlaying: boolean;
    protected destroyed: boolean;
    protected animationEnd: boolean;
    protected _currentActiveSlide: number;
    protected carouselIndicators: any;
    isBrowser: any;
    noWrap: boolean;
    noPause: boolean;
    isControls: boolean;
    keyboard: boolean;
    class: String;
    type: String;
    animation: String;
    activeSlideIndex: number;
    activeSlideChange: EventEmitter<any>;
    activeSlide: number;
    protected _interval: number;
    checkNavigation(): boolean;
    checkDots(): boolean;
    getImg(slide: any): any;
    interval: number;
    readonly isBs4: boolean;
    constructor(config: CarouselConfig, el: ElementRef, platformId: string, cdRef: ChangeDetectorRef, renderer: Renderer2);
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    swipe(action?: string): void;
    nextSlide(force?: boolean): void;
    previousSlide(force?: boolean): void;
    protected fadeAnimation(goToIndex: number, direction?: any): void;
    protected slideAnimation(goToIndex: number, direction: any): void;
    selectSlide(index: number): void;
    play(): void;
    pause(): void;
    getCurrentSlideIndex(): number;
    isLast(index: number): boolean;
    private findNextSlideIndex;
    private _select;
    private restartTimer;
    private resetTimer;
    protected hasClass(el: any, className: any): any;
    protected classAdd(el: any, className: any): void;
    protected removeClass(el: any, className: any): void;
    keyboardControl(event: KeyboardEvent): void;
    focus(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CarouselComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CarouselComponent, "mdb-carousel", never, { "isControls": "isControls"; "class": "class"; "type": "type"; "animation": "animation"; "activeSlide": "activeSlide"; "interval": "interval"; "noWrap": "noWrap"; "noPause": "noPause"; "keyboard": "keyboard"; "activeSlideIndex": "activeSlideIndex"; }, { "activeSlideChange": "activeSlideChange"; }, ["_slidesList"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhcm91c2VsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIFF1ZXJ5TGlzdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTbGlkZUNvbXBvbmVudCB9IGZyb20gJy4vc2xpZGUuY29tcG9uZW50JztcbmltcG9ydCB7IENhcm91c2VsQ29uZmlnIH0gZnJvbSAnLi9jYXJvdXNlbC5jb25maWcnO1xuZXhwb3J0IGRlY2xhcmUgZW51bSBEaXJlY3Rpb24ge1xuICAgIFVOS05PV04gPSAwLFxuICAgIE5FWFQgPSAxLFxuICAgIFBSRVYgPSAyXG59XG4vKipcbiAqIEJhc2UgZWxlbWVudCB0byBjcmVhdGUgY2Fyb3VzZWxcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2Fyb3VzZWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIEFmdGVyVmlld0luaXQge1xuICAgIHByb3RlY3RlZCBlbDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGNkUmVmO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgU1dJUEVfQUNUSU9OOiB7XG4gICAgICAgIExFRlQ6IHN0cmluZztcbiAgICAgICAgUklHSFQ6IHN0cmluZztcbiAgICB9O1xuICAgIF9zbGlkZXNMaXN0OiBRdWVyeUxpc3Q8U2xpZGVDb21wb25lbnQ+O1xuICAgIHJlYWRvbmx5IHNsaWRlczogU2xpZGVDb21wb25lbnRbXTtcbiAgICBwcml2YXRlIF9kZXN0cm95JDtcbiAgICBwcm90ZWN0ZWQgY3VycmVudEludGVydmFsOiBhbnk7XG4gICAgcHJvdGVjdGVkIGlzUGxheWluZzogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgZGVzdHJveWVkOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBhbmltYXRpb25FbmQ6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9jdXJyZW50QWN0aXZlU2xpZGU6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgY2Fyb3VzZWxJbmRpY2F0b3JzOiBhbnk7XG4gICAgaXNCcm93c2VyOiBhbnk7XG4gICAgbm9XcmFwOiBib29sZWFuO1xuICAgIG5vUGF1c2U6IGJvb2xlYW47XG4gICAgaXNDb250cm9sczogYm9vbGVhbjtcbiAgICBrZXlib2FyZDogYm9vbGVhbjtcbiAgICBjbGFzczogU3RyaW5nO1xuICAgIHR5cGU6IFN0cmluZztcbiAgICBhbmltYXRpb246IFN0cmluZztcbiAgICBhY3RpdmVTbGlkZUluZGV4OiBudW1iZXI7XG4gICAgYWN0aXZlU2xpZGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFjdGl2ZVNsaWRlOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIF9pbnRlcnZhbDogbnVtYmVyO1xuICAgIGNoZWNrTmF2aWdhdGlvbigpOiBib29sZWFuO1xuICAgIGNoZWNrRG90cygpOiBib29sZWFuO1xuICAgIGdldEltZyhzbGlkZTogYW55KTogYW55O1xuICAgIGludGVydmFsOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaXNCczQ6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBDYXJvdXNlbENvbmZpZywgZWw6IEVsZW1lbnRSZWYsIHBsYXRmb3JtSWQ6IHN0cmluZywgY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHN3aXBlKGFjdGlvbj86IHN0cmluZyk6IHZvaWQ7XG4gICAgbmV4dFNsaWRlKGZvcmNlPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgcHJldmlvdXNTbGlkZShmb3JjZT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByb3RlY3RlZCBmYWRlQW5pbWF0aW9uKGdvVG9JbmRleDogbnVtYmVyLCBkaXJlY3Rpb24/OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzbGlkZUFuaW1hdGlvbihnb1RvSW5kZXg6IG51bWJlciwgZGlyZWN0aW9uOiBhbnkpOiB2b2lkO1xuICAgIHNlbGVjdFNsaWRlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHBsYXkoKTogdm9pZDtcbiAgICBwYXVzZSgpOiB2b2lkO1xuICAgIGdldEN1cnJlbnRTbGlkZUluZGV4KCk6IG51bWJlcjtcbiAgICBpc0xhc3QoaW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBmaW5kTmV4dFNsaWRlSW5kZXg7XG4gICAgcHJpdmF0ZSBfc2VsZWN0O1xuICAgIHByaXZhdGUgcmVzdGFydFRpbWVyO1xuICAgIHByaXZhdGUgcmVzZXRUaW1lcjtcbiAgICBwcm90ZWN0ZWQgaGFzQ2xhc3MoZWw6IGFueSwgY2xhc3NOYW1lOiBhbnkpOiBhbnk7XG4gICAgcHJvdGVjdGVkIGNsYXNzQWRkKGVsOiBhbnksIGNsYXNzTmFtZTogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVtb3ZlQ2xhc3MoZWw6IGFueSwgY2xhc3NOYW1lOiBhbnkpOiB2b2lkO1xuICAgIGtleWJvYXJkQ29udHJvbChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgZm9jdXMoKTogdm9pZDtcbn1cbiJdfQ==